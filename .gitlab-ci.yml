image: docker.repo.splunkdev.net/ci-cd/ci-container/golang-1.18:1.7.0

###
### BASE VARIABLES
###
variables:
  # Generic Variables
  NAMESPACE: admin-config-service

stages:
  - build
  - analysis
  - acceptance-test
  - promote
  - notify-victorops-alerts

include:
  - project: 'ci-cd/templates'
    ref: master
    file: '/prodsec/.oss-scan.yml'
  - project: 'prodsec/scp-scanning/gitlab-checkmarx'
    ref: latest
    file: '/templates/.sast_scan.yml'

# UnitTests
unittest:
  stage: build
  coverage: '/total:\s+\(statements\)\s+(\d+\.\d+)%/'
  script:
    - make vendor test
    - go run github.com/boumenot/gocover-cobertura@latest < coverage.txt > cobertura-coverage.xml
  artifacts:
    paths:
      - coverage.txt
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura-coverage.xml
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'push'
      when: always

sast-scanner:
  stage: analysis
  extends: .sast_scan
  variables:
    SAST_SCANNER: "Semgrep"
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'push'
      when: always

oss-scan:
  stage: analysis
  extends: .oss-scan
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'push'
      when: always

test-acc:
  stage: acceptance-test
  variables:
    ACS_SERVER: ${STG_URL}
    SPLUNK_STACK: ${STG_STACKNAME}
    STACK_TOKEN: ${STG_STACK_TOKEN}
    STACK_USERNAME: ${STG_STACK_USERNAME}
    STACK_PASSWORD: ${STG_STACK_PASSWORD}
  script:
    - make testacc
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule' && $SCHEDULE_TYPE == 'tf_acc_stg'
      when: always
    - if: $CI_PIPELINE_SOURCE == 'push'
      when: always

push-to-staging:
  stage: promote
  variables:
    GITLAB_TOKEN_USERNAME: ${GITLAB_TOKEN_USERNAME}
    GITLAB_TOKEN: ${GITLAB_TOKEN}
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'
      when: always
    - when: never
  before_script:
    - eval $(ssh-agent -s)
  script:
    - make push-to-staging

#
# Victorops Notification for Fail Jobs
#
notify-failed-schedule:
  stage: notify-victorops-alerts
  script:
    - ./scripts/create-victorops-alerts.sh "acceptance/$STG_STACKNAME" "Scheduled test ($SCHEDULE_TYPE) failure on $STG_STACKNAME"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_failure
    - when: never