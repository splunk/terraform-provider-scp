image: docker.repo.splunkdev.net/ci-cd/ci-container/golang-1.18:1.7.0

stages:
- build
- analysis
- acceptance-test

include:
  - project: 'ci-cd/templates'
    ref: master
    file: '/prodsec/.oss-scan.yml'
  - project: 'prodsec/scp-scanning/gitlab-checkmarx'
    ref: latest
    file: '/templates/.sast_scan.yml'

# UnitTests
unittest:
  stage: build
  coverage: '/total:\s+\(statements\)\s+(\d+\.\d+)%/'
  script:
    - make vendor test
    - go run github.com/boumenot/gocover-cobertura@latest < coverage.txt > cobertura-coverage.xml
  artifacts:
    paths:
      - coverage.txt
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura-coverage.xml
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'push'
      when: always

sast-scanner:
  stage: analysis
  extends: .sast_scan
  variables:
    SAST_SCANNER: "Semgrep"
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'push'
      when: always

oss-scan:
  stage: analysis
  extends: .oss-scan
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'push'
      when: always

test-acc:
  stage: acceptance-test
  variables:
    ACS_SERVER: ${STG_URL}
    SPLUNK_STACK: ${STG_STACKNAME}
    STACK_TOKEN: ${STG_STACK_TOKEN}
    STACK_USERNAME: ${STG_STACK_USERNAME}
    STACK_PASSWORD: ${STG_STACK_PASSWORD}
  script:
    - make testacc
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'push'
      when: always
